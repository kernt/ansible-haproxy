---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '30 1 * * 3'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies
        run: |
          pip install ansible-lint
          ansible-galaxy install -r requirements.yml

      - name: Lint code
        run: |
          yamllint .
          ansible-lint
          
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "${{ github.repository }}"
    needs:
      - lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: ubuntu2204
          - distro: ubuntu2404

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3
        with:
          path: "${{ github.repository }}"

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "${{ matrix.ansible-version }}" ansible-lint molecule molecule-docker docker flake8 flake8-bugbear flake8-docstrings flake8-import-order flake8-pylint pytest pytest-testinfra yamllint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi

      - name: Run Molecule tests
        run: |
          molecule test --all
        env:
          ANSIBLE_FORCE_COLOR: '1'
          ANSIBLE_VERBOSITY: '2'
          MOLECULE_DEBUG: '1'
          MOLECULE_DISTRO: "${{ matrix.distro }}"
          PY_COLORS: '1'
